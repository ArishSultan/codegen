import { BaseVisitor, Context, Visitor, Writer } from "@apexlang/core/model";
import { TypeVisitor } from "./types_visitor";
import { InterfaceVisitor } from "./interface_visitor";
import { parseNamespaceName } from "./helpers";

export class InterfacesVisitor extends BaseVisitor {
  typeVisitor = (writer: Writer): Visitor => new TypeVisitor(writer);
  interfaceVisitor = (writer: Writer): Visitor => new InterfaceVisitor(writer);

  // visitNamespaceBefore(context: Context) {
  //   this.write(`// Code generated by @apexlang/codegen. DO NOT EDIT.\n\n`);
  //   this.write(`using System;\n\n\n`);
  //   super.visitNamespaceBefore(context);
  // }

  visitNamespace(context: Context) {
    this.write(`namespace ${context.namespace.name} {\n\n`);
    super.visitNamespace(context);
  }

  visitNamespaceAfter(context: Context) {
    this.write(`}\n`);
    super.visitNamespaceAfter(context);
  }

  visitInterface(context: Context) {
    const visitor = this.interfaceVisitor(this.writer);
    context.interface.accept(context, visitor);
  }

  visitType(context: Context) {
    const visitor = this.typeVisitor(this.writer);
    context.type.accept(context, visitor);
  }
}
